#!/usr/bin/python3
import sys

def brainfuck_interpreter(code):
    memory = [0] * 30000
    pointer = 0
    input_pointer = 0
    code_pointer = 0
    loop_stack = []
    output = ""

    while code_pointer < len(code):
        command = code[code_pointer]

        if command == '>':
            pointer = (pointer + 1) % len(memory)
        elif command == '<':
            pointer = (pointer - 1) % len(memory)
        elif command == '+':
            memory[pointer] = (memory[pointer] + 1) % 256
        elif command == '-':
            memory[pointer] = (memory[pointer] - 1) % 256
        elif command == '.':
            output += chr(memory[pointer])
        elif command == ',':
            try:
                user_input = input()
                if user_input:
                    memory[pointer] = ord(user_input[0])
                else:
                    memory[pointer] = 0
            except EOFError:
                memory[pointer] = 0
        elif command == '[':
            if memory[pointer] == 0:
                open_brackets = 1
                while open_brackets != 0:
                    code_pointer += 1
                    if code[code_pointer] == '[':
                        open_brackets += 1
                    elif code[code_pointer] == ']':
                        open_brackets -= 1
            else:
                loop_stack.append(code_pointer)
        elif command == ']':
            if memory[pointer] != 0:
                code_pointer = loop_stack[-1]
            else:
                loop_stack.pop()

        code_pointer += 1

    return output

def main():
    if len(sys.argv) < 2:
        print("Usage: brainfuck_interpreter <filename>")
        return

    filename = sys.argv[1]

    try:
        with open(filename, "r") as file:
            code = file.read()
            result = brainfuck_interpreter(code)
            print(result)
    except FileNotFoundError:
        print(f"Error: File '{filename}' not found.")
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    main()
